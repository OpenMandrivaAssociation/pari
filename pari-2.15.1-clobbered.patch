--- a/src/basemath/bibli1.c
+++ b/src/basemath/bibli1.c
@@ -1565,7 +1565,7 @@ cholesky_norm_ek(GEN q, long k)
  * If (check != NULL) consider only vectors passing the check, and assumes
  *   we only want the smallest possible vectors */
 static GEN
-smallvectors(GEN q, GEN BORNE, long maxnum, FP_chk_fun *CHECK)
+smallvectors(GEN q, GEN BORNE, const long maxnum, FP_chk_fun *CHECK)
 {
   long N = lg(q), n = N-1, i, j, k, s, stockmax, checkcnt = 1;
   pari_sp av, av1;
@@ -1793,9 +1793,9 @@ END:
  * If check is non-NULL keep x only if check(x).
  * If a is a vector, assume a[1] is the LLL-reduced Cholesky form of q */
 GEN
-fincke_pohst(GEN a, GEN B0, long stockmax, long PREC, FP_chk_fun *CHECK)
+fincke_pohst(GEN a, GEN B0, const long stockmax, long PREC, FP_chk_fun *CHECK)
 {
-  pari_sp av = avma;
+  VOLATILE pari_sp av = avma;
   VOLATILE long i,j,l;
   VOLATILE GEN r,rinv,rinvtrans,u,v,res,z,vnorm,rperm,perm,uperm, bound = B0;
 
--- a/src/gp/gp.c
+++ b/src/gp/gp.c
@@ -421,7 +421,8 @@ break_loop(int numerr)
 {
   filtre_t F;
   Buffer *b;
-  int sigint = numerr<0, go_on = sigint;
+  int sigint = numerr<0;
+  VOLATILE int go_on = sigint;
   struct gp_context rec1, rec2;
   const char *prompt, *msg;
   long nenv, oldframe_level = frame_level;
--- a/src/headers/paripriv.h
+++ b/src/headers/paripriv.h
@@ -532,7 +532,7 @@ void pari_thread_init_varstate();
 /* parinf.h */
 
 GEN  coltoalg(GEN nf,GEN x);
-GEN  fincke_pohst(GEN a,GEN BOUND,long stockmax,long PREC, FP_chk_fun *CHECK);
+GEN  fincke_pohst(GEN a,GEN BOUND,const long stockmax,long PREC, FP_chk_fun *CHECK);
 void init_zlog(zlog_S *S, GEN bid);
 GEN  log_gen_arch(zlog_S *S, long index);
 GEN  log_gen_pr(zlog_S *S, long index, GEN nf, long e);
--- a/src/language/gplib.c
+++ b/src/language/gplib.c
@@ -920,7 +920,7 @@ parse_key_val(char *src, char **ps, char
 void
 gp_initrc(pari_stack *p_A)
 {
-  FILE *file = gprc_get();
+  FILE * VOLATILE file = gprc_get();
   Buffer *b;
   filtre_t F;
   VOLATILE long c = 0;
--- a/src/modules/stark.c
+++ b/src/modules/stark.c
@@ -2788,8 +2788,9 @@ quadray_init(GEN *pD, GEN f, GEN *pbnf,
 /* compute the polynomial over Q of the Hilbert class field of
    Q(sqrt(D)) where D is a positive fundamental discriminant */
 static GEN
-quadhilbertreal(GEN D, long prec)
+quadhilbertreal(GEN D, long baseprec)
 {
+  VOLATILE long prec = baseprec;
   GEN bnf, bnr, dtQ, data, M;
   long newprec;
   pari_timer T;

