--- src/language/eval.c
+++ src/language/eval.c
@@ -1079,11 +1079,11 @@
         break;
       }
 
-#define EVAL_f(f) \
+#define EVAL_f0(f) f()
+#define EVAL_f1(f) sp--; f(st[sp])
+#define EVAL_fn(f) \
   switch (ep->arity) \
   { \
-    case 0: f(); break; \
-    case 1: sp--; f(st[sp]); break; \
     case 2: sp-=2; f(st[sp],st[sp+1]); break; \
     case 3: sp-=3; f(st[sp],st[sp+1],st[sp+2]); break; \
     case 4: sp-=4; f(st[sp],st[sp+1],st[sp+2],st[sp+3]); break; \
@@ -1114,7 +1114,12 @@
         GEN res;
         /* Macro Madness : evaluate function ep->value on arguments
          * st[sp-ep->arity .. sp]. Set res = result. */
-        EVAL_f(res = ((GEN (*)(ANYARG))ep->value));
+        switch (ep->arity)
+        {
+          case 0:  EVAL_f0(res = ((GEN (*)(void))ep->value)); break;
+          case 1:  EVAL_f1(res = ((GEN (*)(long))ep->value)); break;
+          default: EVAL_fn(res = ((GEN (*)(long, ...))ep->value));
+        }
         if (br_status) goto endeval;
         gel(st,sp++)=res;
         break;
@@ -1133,7 +1138,12 @@
       {
         entree *ep = (entree *)operand;
         long res;
-        EVAL_f(res = ((long (*)(ANYARG))ep->value));
+        switch (ep->arity)
+        {
+          case 0:  EVAL_f0(res = ((long (*)(void))ep->value)); break;
+          case 1:  EVAL_f1(res = ((long (*)(long))ep->value)); break;
+          default: EVAL_fn(res = ((long (*)(long, ...))ep->value));
+        }
         if (br_status) goto endeval;
         st[sp++] = res;
         break;
@@ -1142,7 +1152,12 @@
       {
         entree *ep = (entree *)operand;
         long res;
-        EVAL_f(res = ((int (*)(ANYARG))ep->value));
+        switch (ep->arity)
+        {
+          case 0:  EVAL_f0(res = ((int (*)(void))ep->value)); break;
+          case 1:  EVAL_f1(res = ((int (*)(long))ep->value)); break;
+          default: EVAL_fn(res = ((int (*)(long, ...))ep->value));
+        }
         if (br_status) goto endeval;
         st[sp++] = res;
         break;
@@ -1150,11 +1165,18 @@
     case OCcallvoid:
       {
         entree *ep = (entree *)operand;
-        EVAL_f(((void (*)(ANYARG))ep->value));
+        switch (ep->arity)
+        {
+          case 0:  EVAL_f0(((void (*)(void))ep->value)); break;
+          case 1:  EVAL_f1(((void (*)(long))ep->value)); break;
+          default: EVAL_fn(((void (*)(long, ...))ep->value));
+        }
         if (br_status) goto endeval;
         break;
       }
-#undef EVAL_f
+#undef EVAL_f0
+#undef EVAL_f1
+#undef EVAL_fn
 
     case OCcalluser:
       {
